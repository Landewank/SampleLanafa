name: Continuous Integration

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
    
    - name : Build App
      run: npm run build
    
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_EMAIL }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    
    - name: Build Docker image
      run: docker build -t ${{ vars.username}}/lanafatemani:latest .

    - name: Show Images
      run: docker images

    - name: Push Docker image to Docker Hub
      run: docker push ${{ vars.username}} /lanafatemani:latest
      
    - name: Show Apps Running
      run: docker ps

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: SSH to VPS and deploy
      uses: appleboy/ssh-action@v0.1.3
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.VPS_PRIVATE_KEY }}
        port: 22
        script: |
          docker pull lffdevops/lanafatemani:latest
          docker stop lffdevops/lanafatemani:latest
          docker rm lffdevops/lanafatemani:latest
          docker run -d --name my-react-app -p 3001:3000 lffdevops/lanafatemani:latest
          
