name: Continuous Integration and Deployment

on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]

jobs:
  install-dependencies:
    name: Install Dependencies
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.18]

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - name: Install dependencies
      run: npm install

  build-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_PASSWORD }}
    - name: Build Docker image
      run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/lanafatemani:latest .
    - name: Show Docker Images
      run: docker images
    - name: Push Docker image to DockerHub
      run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/lanafatemani:latest

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: build-image
    steps:
    - name: Deploy to Remote Server
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.SERVER_USERNAME }}
        key: ${{ secrets.VPS_PRIVATE_KEY }}
        port: 22
        script: |
          docker pull ${{ secrets.DOCKERHUB_USERNAME }}/lanafatemani:latest
          docker stop my-react-app || true
          docker rm my-react-app || true
          docker run -d --name my-react-app -p 3001:3000 ${{ secrets.DOCKERHUB_USERNAME }}/lanafatemani:latest
